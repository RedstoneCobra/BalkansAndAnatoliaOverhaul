# `culture_conversions.2` is the core event. When the progress completes it fires `culture_conversions.1` to convert.
# `culture_conversions.3` clears progress and is called when the province owner changes.

# Author: Phlopsi
# Author: Sun_Wu
# Author: Warial (small tweaks)

# Fired by `culture_conversions.2`. Responsible for flipping culture.
province_event = {
	id = culture_conversions.1
	title = culture_conversions.1.t
	desc = culture_conversions.1.d
	picture = CITY_VIEW_eventPicture
	
	is_triggered_only = yes
	
	trigger = {
		always = yes
	}
	
	option = {
		name = culture_conversions.1.a
		
		ai_chance = {
			factor = 1
		}
		
		hidden_effect = {
			set_variable = {
				which = pv_culture_conversion_progress
				value = 0
			}
		}
		if = {
			limit = {
				is_capital = yes
				NOT = { has_province_flag = german_ostsiedlung }
			}
			change_culture = owner
		}
		else_if = {
			limit = {
				has_province_flag = german_ostsiedlung
				area = hinterpommern_area
				NOT = { province_id = 264 } # Neumark
			}
			change_culture = pommeranian
			add_province_modifier = { name = ostsiedlung_province_effect duration = 9000 }
		}
		else_if = {
			limit = {
				has_province_flag = german_ostsiedlung
				area = brandenburg_area
				province_id = 264 # Neumark
			}
			change_culture = low_saxon
			add_province_modifier = { name = ostsiedlung_province_effect duration = 9000 }
		}
		else_if = {
			limit = {
				has_province_flag = german_ostsiedlung
				area = lusatia_area
				NOT = { province_id = 4002 } # Jawor
				NOT = { province_id = 4003 } # Glogow
			}
			change_culture = low_saxon
			add_province_modifier = { name = ostsiedlung_province_effect duration = 9000 }
		}
		else_if = {
			limit = {
				has_province_flag = german_ostsiedlung
				area = lusatia_area
				OR = {
					province_id = 4002 # Jawor
					province_id = 4003 # Glogow
				}
			}
			change_culture = german_silesian
			add_province_modifier = { name = ostsiedlung_province_effect duration = 9000 }
			if = {
				limit = { owner = { primary_culture = silesian } }
				owner = { change_primary_culture = german_silesian }
			}
		}
		else_if = {
			limit = {
				has_province_flag = german_ostsiedlung
				area = lower_silesia_area
			}
			change_culture = german_silesian
			add_province_modifier = { name = ostsiedlung_province_effect duration = 9000 }
			if = {
				limit = { owner = { primary_culture = silesian } }
				owner = { change_primary_culture = german_silesian }
			}
		}
		else_if = {
			limit = {
				has_province_flag = german_ostsiedlung
				area = upper_silesia_area
			}
			change_culture = german_silesian
			add_province_modifier = { name = ostsiedlung_province_effect duration = 9000 }
			if = {
				limit = { owner = { primary_culture = silesian } }
				owner = { change_primary_culture = german_silesian }
			}
		}
		else_if = {
			limit = {
				has_province_flag = german_ostsiedlung
				owner = {
					OR = {
						culture_group = low_germanic
						culture_group = high_germanic
					}
				}
			}
			change_culture = owner
			add_province_modifier = { name = ostsiedlung_province_effect duration = 9000 }
		}
		else_if = {
			limit = {
				OR = {
					culture = zhuang
					culture = tay_nung
				}
				owner = { culture_group = chinese_group }
				any_neighbor_province = {
					OR = {
						culture = yueyu
						culture = xiyue
						culture = pinghua
					}
				}
			}
			change_culture = pinghua
		}
		else_if = {
			limit = {
				culture = malayan
				owner = { culture_group = thai_group }
				any_neighbor_province = {
					OR = {
						culture = thai
						culture = dambru
					}
				}
			}
			change_culture = dambru
		}
		else_if = {
			limit = {
				OR = {
					culture = karelian
					culture = sapmi
					culture = nenet
				}
				owner = { culture_group = east_slavic }
				any_neighbor_province = {
					culture_group = east_slavic
				}
			}
			change_culture = pomor
		}
		else = {
			random_neighbor_province = {
				limit = {
					owned_by = ROOT
					NOT = { culture = ROOT }
					OR = {
						AND = {
							owner = { has_unified_culture_group = yes }
							culture_group = owner
						}
						has_owner_accepted_culture = yes
						has_owner_culture = yes
					}
				}
				ROOT = {
					change_culture = PREV
				}
			}
		}
	}
	
	#option = {
	#	name = culture_conversions.1.b
	#	
	#	ai_chance = {
	#		factor = 0
	#	}
	#}
	
	after = {
		hidden_effect = {
			if = {
				limit = {
					has_province_flag = german_ostsiedlung
				}
				clr_province_flag = german_ostsiedlung
				add_province_modifier = {
					name = culture_conversion_cooldown
					duration = -1 # 20 years
					hidden = yes
				}
			}
			add_province_modifier = {
				name = culture_conversion_cooldown
				duration = 7300 # 20 years
				hidden = yes
			}
		}
	}
}

province_event = {
	id = culture_conversions.2
	title = no_localization
	desc = no_localization
	picture = MEIOU_AND_TAXES_eventPicture
	
	hidden = yes
	
	mean_time_to_happen = { years = 5 }
	
	trigger = {
		is_state_core = owner
		NOT = { nationalism = 1 }
		OR = {
			has_owner_culture = no
			AND = {
				has_province_flag = german_ostsiedlung
				owner = { is_part_of_hre = yes }
			}
		}
		OR = {
			NOT = { culture_group = owner }
			owner = { has_unified_culture_group  = no }
		}
		OR = {
			owner = {
				any_owned_province = {
					NOT = { culture = ROOT }
					OR = {
						has_owner_culture = yes
						has_owner_accepted_culture = yes
						AND = {
							owner = { has_unified_culture_group = yes }
							culture_group = owner
						}
					}
					any_neighbor_province = {
						province_id = ROOT
					}
				}
			}
			AND = {
				is_capital = yes
				owner = {
					calc_true_if = {
						all_owned_province = {
							has_owner_culture = yes
						}
						
						amount = 2
					}
				}
			}
			has_province_modifier = frankish_settlers
			AND = {
				has_province_flag = german_ostsiedlung
				is_part_of_hre = yes
			}
		}
		NOT = { has_province_modifier = culture_conversion_cooldown }
	}
	
	# TODO: tolerance_to_this
	immediate = {
		# initialize constants
		export_to_variable = {
			which = tc_development
			value = development
		}
		
		export_to_variable = {
			which = tc_owner_culture_conversion_cost
			value = modifier:culture_conversion_cost
			who = owner
		}
		
		export_to_variable = {
			which = tc_local_culture_conversion_cost
			value = modifier:local_culture_conversion_cost
		}
		
		export_to_variable = {
			which = tc_local_autonomy
			value = local_autonomy
		}
		
		# calculate tv_development_divider
		set_variable = {
			which = tv_development_divider
			which = tc_development
		}
		
		divide_variable = {
			which = tv_development_divider
			value = 100
		}
		
		change_variable = {
			which = tv_development_divider
			value = 1
		}
		
		# calculate tv_culture_conversion_multiplier
		if = {
			limit = {
				check_variable = {
					which = tc_owner_culture_conversion_cost
					value = 0
				}
			}
			
			set_variable = {
				which = tv_tmp0
				value = 1
			}
			
			change_variable = {
				which = tv_tmp0
				which = tc_owner_culture_conversion_cost
			}
			
			if = {
				limit = {
					check_variable = {
						which = tc_local_culture_conversion_cost
						value = 0
					}
				}
				
				change_variable = {
					which = tv_tmp0
					which = tc_local_culture_conversion_cost
				}
			}
			
			set_variable = {
				which = tv_culture_conversion_multiplier
				value = 1
			}
			
			if = {
				limit = {
					is_variable_equal = {
						which = tv_tmp0
						value = 0
					}
				}
				
				# log = "<ERROR><28D43300><THIS:[This.GetName]><PREV:[Prev.GetName]><ROOT:[Root.GetName]><FROM:[From.GetName]> Division by zero!"
				
			}
			else = {
				divide_variable = {
					which = tv_culture_conversion_multiplier
					which = tv_tmp0
				}
			}
		}
		else = {
			set_variable = {
				which = tv_culture_conversion_multiplier
				value = 1
			}
			
			subtract_variable = {
				which = tv_culture_conversion_multiplier
				which = tc_owner_culture_conversion_cost
			}
			
			subtract_variable = {
				which = tv_culture_conversion_multiplier
				which = tc_local_culture_conversion_cost
			}
		}
	
		# calculate tv_local_autonomy_multiplier
		set_variable = {
			which = tv_local_autonomy_multiplier
			value = 100
		}
		
		subtract_variable = {
			which = tv_local_autonomy_multiplier
			which = tc_local_autonomy
		}
		
		divide_variable = {
			which = tv_local_autonomy_multiplier
			value = 100
		}
		
		# calculate culture conversion progress gain
		set_variable = {
			which = tv_culture_conversion_progress_gain
			value = 5 # base gain
		}
		
		multiply_variable = {
			which = tv_culture_conversion_progress_gain
			which = tv_culture_conversion_multiplier
		}
		
		#Terrain influence. Was historically harder to convert less accessible locations
		#if = {
		#	limit = {
		#		has_province_flag = challenging_terrain
		#	}
		#
		#	multiply_variable = {
		#		which = v_culture_conversion_progress_gain
		#		value = 0.75 #-25% gain rate and a binary fraction
		#	}
		#
		#}
		#else_if = {
		#	limit = {
		#		has_province_flag = rugged_terrain
		#	}
		#
		#	multiply_variable = {
		#		which = v_culture_conversion_progress_gain
		#		value = 0.375 #-62.5% gain rate and a binary fraction
		#	}
		#}
		
		
		# Special historical cases
		trigger_switch = {
			on_trigger = continent
			europe = {
				trigger_switch = {
					on_trigger = superregion
					commonwealth_superregion = {
						if = {
							limit = {
								owner = {
									OR = {
										culture_group = low_germanic
										culture_group = high_germanic
										culture_group = west_slavic
									}
									OR = {
										has_ruler_modifier = ostsiedlung_promoted_western
										has_ruler_modifier = ostsiedlung_promoted_eastern
									}
								}
								has_province_flag = german_ostsiedlung # Ostsiedlung
							}
							
							multiply_variable = {
								which = tv_culture_conversion_progress_gain
								value = 2
							}
						}
					}
					germany_superregion = {
						if = {
							limit = {
								owner = {
									OR = {
										culture_group = low_germanic
										culture_group = high_germanic
										culture_group = west_slavic
									}
									OR = {
										has_ruler_modifier = ostsiedlung_promoted_western
										has_ruler_modifier = ostsiedlung_promoted_eastern
									}
								}
								has_province_flag = german_ostsiedlung # Ostsiedlung
							}
							
							multiply_variable = {
								which = tv_culture_conversion_progress_gain
								value = 4
							}
						}
					}
					greater_russia_superregion = {
						if = {
							limit = {
								owner = {
									culture_group = east_slavic # Uniting Russian cultures
								}
							}
							
							multiply_variable = {
								which = tv_culture_conversion_progress_gain
								value = 1.5
							}
						}
						
						if = {
							limit = {
								culture = tartar
								owner = {
									culture_group = tartar_group
								}
							}
							
							multiply_variable = {
								which = tv_culture_conversion_progress_gain
								value = 16
							}
						}
					}
				}
			}
			indian_continent = {
				if = {
					limit = {
						culture_group = hindusthani
						owner = {
							primary_culture = urdu
						}
					}
					
					multiply_variable = {
						which = tv_culture_conversion_progress_gain
						value = 4
					}
				}
				
				if = {
					limit = {
						culture_group = deccan_group
						owner = {
							primary_culture = dakani
						}
					}
					
					multiply_variable = {
						which = tv_culture_conversion_progress_gain
						value = 4
					}
				}
			}
			mena = {
				if = {
					limit = {
						OR = {
							region = north_anatolia_region
							region = south_anatolia_region
						}
						culture_group = turko_byzantine
						OR = {
							AND = {
								religion_group = muslim
								OR = {
									culture = greek
									culture = pontic
									culture = cappadocian
								}
								owner = {
									OR = {
										primary_culture = turkish
										primary_culture = yorouk
									}
								}
							}
							AND = {
								religion_group = christian
								OR = {
									culture = turkish
									culture = yorouk
								}
								owner = {
									OR = {
										primary_culture = greek
										primary_culture = pontic
										primary_culture = cappadocian
									}
								}
							}
						}
					}
					
					multiply_variable = {
						which = tv_culture_conversion_progress_gain
						value = 4
					}
				}
			}
			north_asia = {
				if = {
					limit = {
						culture = tartar
						owner = {
							culture_group = tartar_group
						}
					}
					
					multiply_variable = {
						which = tv_culture_conversion_progress_gain
						value = 16
					}
				}
			}
			east_asia = {
				if = {
					limit = {
						culture = chaghatai
						owner = {
							culture_group = tartar_group
						}
					}
					
					multiply_variable = {
						which = tv_culture_conversion_progress_gain
						value = 16
					}
				}
				
				if = {
					limit = {
						culture = mongol
						owner = {
							OR = {
								culture_group = altaic
								primary_culture = daur
							}
						}
					}
					
					multiply_variable = {
						which = tv_culture_conversion_progress_gain
						value = 16
					}
				}
				
				if = {
					limit = {
						culture = uriankhai
						OR = {
							area = liaoning_area
							area = jilin_area
							area = heilongjiang_area
						}
						owner = {
							primary_culture = jurchen
						}
					}
					
					multiply_variable = {
						which = tv_culture_conversion_progress_gain
						value = 4
					}
				}
			}
			
			central_asia = {
				if = {
					limit = {
						culture = chaghatai
						owner = {
							culture_group = tartar_group
						}
					}
					
					multiply_variable = {
						which = tv_culture_conversion_progress_gain
						value = 8
					}
				}
			}
		}
		if = { #Formely a hard block, was changed to penalty due to being ahistorical
			limit = {
				has_owner_accepted_culture = yes
			}
			multiply_variable = {
				which = tv_culture_conversion_progress_gain
				value = 0.25
			}
		}
		
		
		if = {
			limit = {
				is_variable_equal = {
					which = tv_development_divider
					value = 0
				}
			}
			
			# log = "<ERROR><29AF39C0><THIS:[This.GetName]><PREV:[Prev.GetName]><ROOT:[Root.GetName]><FROM:[From.GetName]> Division by zero!"
			
		}
		else = {
			divide_variable = {
				which = tv_culture_conversion_progress_gain
				which = tv_development_divider
			}
		}
		
		if = {
			limit = {
				is_variable_equal = {
					which = rural_density
					value = 0
				}
			}
			
			# log = "<ERROR><29AF39C0><THIS:[This.GetName]><PREV:[Prev.GetName]><ROOT:[Root.GetName]><FROM:[From.GetName]> Division by zero!"
			
		}
		else = {
			divide_variable = {
				which = tv_culture_conversion_progress_gain
				which = rural_density
			}
		}
		
		multiply_variable = {
			which = tv_culture_conversion_progress_gain
			which = tv_local_autonomy_multiplier
		}
		
		# increase pv_culture_conversion_progress and fire culture conversion event,
		# if the progress is complete
		change_variable = {
			which = pv_culture_conversion_progress
			which = tv_culture_conversion_progress_gain
		}
		
		if = {
			limit = {
				check_variable = {
					which = pv_culture_conversion_progress
					value = 100
				}
			}
			
			province_event = { id = culture_conversions.1 }
		}
		
		# cleanup
		set_variable = { which = tc_development                      value = 0 }
		set_variable = { which = tc_owner_culture_conversion_cost    value = 0 }
		set_variable = { which = tc_local_culture_conversion_cost    value = 0 }
		set_variable = { which = tc_local_autonomy                   value = 0 }
		set_variable = { which = tv_development_divider              value = 0 }
		set_variable = { which = tv_tmp0                             value = 0 }
		set_variable = { which = tv_local_autonomy_multiplier        value = 0 }
		set_variable = { which = tv_culture_conversion_multiplier    value = 0 }
		set_variable = { which = tv_culture_conversion_progress_gain value = 0 }
	}
	
	option = {
		name = no_localization
	}
}

province_event = {
	id = culture_conversions.3
	title = no_localization
	desc = no_localization
	picture = MEIOU_AND_TAXES_eventPicture
	
	hidden = yes
	is_triggered_only = yes
	
	trigger = {
		always = yes
	}
	
	immediate = {
		if = {
			limit = { NOT = { has_province_flag = german_ostsiedlung } }
			set_variable = {
				which = pv_culture_conversion_progress
				value = 0
			}
		}
	}
	
	option = {
		name = no_localization
	}
}

province_event = {
	id = culture_conversions.4
	title = "culture_conversions.4.name"
	desc = "culture_conversions.4.desc"
	picture = REFORM_eventPicture
	
	mean_time_to_happen = {
		years = 50
		
		modifier = {
			factor = 0.9
			owner = { stability = 2 }
		}
		
		modifier = {
			factor = 0.9
			owner = { stability = 3 }
		}
	}
	
	trigger = {
		OR = { region = al_sham_region region = al_iraq_region }
		culture_group = aramaic_group
		religion_group = muslim
		NOT = { nationalism = 1 }
		NOT = {
			AND = {
				owner = { religion_group = muslim }
				has_owner_culture = yes
			}
		}
	}
	
	option = {
		name = "culture_conversions.4.opta"
		
		trigger = {
			area = palestine_area
		}
		
		change_culture = levantine
	}
	
	option = {
		name = "culture_conversions.4.optb"
		
		trigger = {
			OR = {
				area = syria_area
				area = aleppo_area
			}
		}
		
		change_culture = shami
	}
	
	option = {
		name = "culture_conversions.4.optc"
		
		trigger = {
			area = mosul_area
		}
		
		change_culture = kurdish
	}
	
	option = {
		name = "culture_conversions.4.optb"
		
		trigger = {
			OR = {
				area = iraq_arabi_area
				area = lower_iraq_area
				area = basra_area
			}
		}
		
		change_culture = iraqi
	}
}

province_event = {
	id = culture_conversions.5
	title = "culture_conversions.5.name"
	desc = "culture_conversions.5.desc"
	picture = REFORM_eventPicture
	
	mean_time_to_happen = {
		years = 50
		
		modifier = {
			factor = 0.9
			owner = { stability = 2 }
		}
		
		modifier = {
			factor = 0.9
			owner = { stability = 3 }
		}
	}
	
	trigger = {
		OR = { region = al_sham_region region = al_iraq_region }
		religion_group = christian
		NOT = { culture_group = aramaic_group }
		NOT = { nationalism = 1 }
		NOT = {
			AND = {
				owner = { religion_group = christian }
				has_owner_culture = yes
			}
		}
	}
	
	option = {
		name = "culture_conversions.5.opta"
		
		trigger = {
			OR = {
				area = palestine_area
				area = syria_area
			}
		}
		
		change_culture = samaritan_c
	}
	
	option = {
		name = "culture_conversions.5.optb"
		
		trigger = {
			area = aleppo_area
		}
		
		change_culture = syriac
	}
	
	option = {
		name = "culture_conversions.5.optc"
		
		trigger = {
			NOT = { area = palestine_area }
			NOT = { area = syria_area }
			NOT = { area = aleppo_area }
		}
		
		change_culture = aramaic
	}
}

province_event = {
	id = culture_conversions.6
	title = "culture_conversions.6.name"
	desc = "culture_conversions.6.desc"
	picture = REFORM_eventPicture
	
	mean_time_to_happen = {
		years = 50
		
		modifier = {
			factor = 0.9
			owner = { stability = 2 }
		}
		
		modifier = {
			factor = 0.9
			owner = { stability = 3 }
		}
	}
	
	trigger = {
		region = egypt_region
		religion_group = christian
		NOT = { culture_group = coptic_group }
		OR = {
			NOT = { area = cyrenaica_area }
			NOT = { area = libyan_desert_area }
			AND = {
				NOT = { culture_group = mashreqi }
				NOT = { culture_group = maghreb }
			}
		}
		NOT = { nationalism = 1 }
		NOT = {
			AND = {
				owner = { religion_group = christian }
				has_owner_culture = yes
			}
		}
	}
	
	option = {
		name = "culture_conversions.6.opta"
		
		trigger = {
			region = egypt_region
		}
		
		change_culture = coptic_culture
	}
}

province_event = {
	id = culture_conversions.7
	title = "culture_conversions.7.name"
	desc = "culture_conversions.7.desc"
	picture = REFORM_eventPicture
	
	mean_time_to_happen = {
		years = 50
		
		modifier = {
			factor = 0.9
			owner = { stability = 2 }
		}
		
		modifier = {
			factor = 0.9
			owner = { stability = 3 }
		}
	}
	
	trigger = {
		area = east_adriatic_coast_area
		NOT = { culture_group = latin }
		NOT = { nationalism = 1 }
		owner = {
			culture_group = latin
		}
	}
	
	option = {
		name = "culture_conversions.7.opta"
		
		trigger = {
			area = east_adriatic_coast_area
		}
		
		change_culture = dalmatian
	}
}
